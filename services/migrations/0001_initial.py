# Generated by Django 5.1.1 on 2024-10-30 15:01

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Balance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.CharField(max_length=16)),
                ('expiry_date', models.CharField(max_length=5)),
                ('cvv', models.CharField(max_length=3)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SecuritySettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_two_factor_enabled', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(choices=[('like', 'Like'), ('comment', 'Comment'), ('follow', 'Follow'), ('share', 'Share'), ('view', 'View'), ('save', 'Save'), ('vote', 'Vote'), ('premium_like', 'Premium Like'), ('premium_comment', 'Premium Comment'), ('premium_follow', 'Premium Follow'), ('premium_share', 'Premium Share'), ('premium_view', 'Premium View'), ('youtube_subscribe', 'YouTube Subscribe'), ('youtube_like', 'YouTube Like'), ('youtube_dislike', 'YouTube Dislike'), ('youtube_comment', 'YouTube Comment'), ('youtube_view', 'YouTube View'), ('youtube_share', 'YouTube Share'), ('youtube_watch_time', 'YouTube Watch Time'), ('youtube_premium_subscribe', 'YouTube Premium Subscribe'), ('youtube_premium_like', 'YouTube Premium Like'), ('youtube_premium_comment', 'YouTube Premium Comment'), ('youtube_premium_view', 'YouTube Premium View'), ('youtube_recommend', 'YouTube Recommend'), ('youtube_trending', 'YouTube Trending'), ('youtube_watch_complete', 'YouTube Watch Complete'), ('youtube_ads_view', 'YouTube Ads View'), ('youtube_super_chat', 'YouTube Super Chat'), ('youtube_super_sticker', 'YouTube Super Sticker'), ('youtube_channel_follow', 'YouTube Channel Follow'), ('youtube_live_view', 'YouTube Live View'), ('youtube_live_reaction', 'YouTube Live Reaction'), ('youtube_live_comment', 'YouTube Live Comment'), ('youtube_live_share', 'YouTube Live Share'), ('instagram_follow', 'Instagram Follow'), ('instagram_like', 'Instagram Like'), ('instagram_comment', 'Instagram Comment'), ('instagram_share', 'Instagram Share'), ('instagram_story_view', 'Instagram Story View'), ('instagram_reel_view', 'Instagram Reel View'), ('instagram_save', 'Instagram Save'), ('instagram_igtv_view', 'Instagram IGTV View'), ('instagram_direct_message', 'Instagram Direct Message'), ('instagram_live_view', 'Instagram Live View'), ('instagram_live_comment', 'Instagram Live Comment'), ('instagram_live_like', 'Instagram Live Like'), ('instagram_live_reaction', 'Instagram Live Reaction'), ('instagram_premium_follow', 'Instagram Premium Follow'), ('instagram_premium_like', 'Instagram Premium Like'), ('instagram_premium_comment', 'Instagram Premium Comment'), ('instagram_premium_share', 'Instagram Premium Share'), ('instagram_premium_story_view', 'Instagram Premium Story View'), ('instagram_poll_vote', 'Instagram Poll Vote'), ('instagram_custom_comments', 'Instagram Custom Comments'), ('instagram_profile_visit', 'Instagram Profile Visit'), ('instagram_post_reach', 'Instagram Post Reach'), ('instagram_profile_impression', 'Instagram Profile Impression'), ('instagram_save_to_collection', 'Instagram Save to Collection'), ('telegram_member', 'Telegram Member'), ('telegram_view', 'Telegram View'), ('telegram_post_share', 'Telegram Post Share'), ('telegram_vote', 'Telegram Vote'), ('telegram_comment', 'Telegram Comment'), ('telegram_reaction', 'Telegram Reaction'), ('telegram_forward', 'Telegram Forward'), ('telegram_poll_vote', 'Telegram Poll Vote'), ('telegram_premium_member', 'Telegram Premium Member'), ('telegram_premium_view', 'Telegram Premium View'), ('telegram_post_like', 'Telegram Post Like'), ('telegram_channel_subscriber', 'Telegram Channel Subscriber'), ('telegram_group_join', 'Telegram Group Join'), ('telegram_bot_interaction', 'Telegram Bot Interaction'), ('telegram_message_forward', 'Telegram Message Forward'), ('telegram_sticker_share', 'Telegram Sticker Share'), ('telegram_pinned_message', 'Telegram Pinned Message'), ('telegram_voice_message', 'Telegram Voice Message'), ('telegram_video_message', 'Telegram Video Message'), ('telegram_live_view', 'Telegram Live View'), ('telegram_live_reaction', 'Telegram Live Reaction'), ('telegram_live_comment', 'Telegram Live Comment'), ('telegram_live_share', 'Telegram Live Share')], default='follow', max_length=30)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(default='No description')),
                ('platform', models.CharField(choices=[('YouTube', 'YouTube'), ('Instagram', 'Instagram'), ('Telegram', 'Telegram')], default='YouTube', max_length=20)),
                ('platform_token', models.CharField(blank=True, max_length=255, null=True)),
                ('base_price', models.DecimalField(decimal_places=2, editable=False, max_digits=10)),
                ('price', models.DecimalField(decimal_places=2, editable=False, max_digits=10)),
                ('completion_time', models.IntegerField(editable=False)),
                ('completion_rate', models.IntegerField(default=50000, editable=False)),
                ('order_speed', models.IntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.category')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expected_completion_time', models.DateTimeField()),
                ('is_completed', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.service')),
            ],
            options={
                'verbose_name': 'Buyurtma',
                'verbose_name_plural': 'Buyurtmalar',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
